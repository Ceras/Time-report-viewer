{
  "name": "react-remarkable",
  "version": "1.1.0",
  "description": "A React component for rendering Markdown with remarkable",
  "main": "dist/index.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/acdlite/react-remarkable.git"
  },
  "dependencies": {
    "react": "^0.12.1",
    "remarkable": "^1.4.1"
  },
  "devDependencies": {
    "6to5": "^1.13.11"
  },
  "scripts": {
    "build": "6to5 src -d dist --modules commonInterop",
    "prepublish": "npm run build"
  },
  "keywords": [
    "react",
    "remarkable",
    "markdown",
    "commonmark"
  ],
  "author": {
    "name": "Andrew Clark",
    "email": "acdlite@me.com"
  },
  "license": "MIT",
  "readme": "react-remarkable\n=================\n\nA React component for rendering Markdown with [remarkable](https://github.com/jonschlinkert/remarkable).\n\n```\nnpm install --save react-remarkable\n```\n\n## Usage\n\n```jsx\n\nvar React = require('react');\nvar Markdown = require('react-remarkable');\n\nvar MyComponent = React.createClass({\n\n  render() {\n    return (\n      <div>\n        {/* Pass Markdown source to the `source` prop */}\n        <Markdown source=\"**Markdown is awesome!**\" />\n\n        {/* Or pass it as children */}\n        {/* You can nest React components, too */}\n        <Markdown>\n          ## Reasons React is great\n\n          1. Server-side rendering\n          2. This totally works:\n\n          <SomeOtherAmazingComponent />\n\n          Pretty neat!\n        </Markdown>\n      </div>\n    );\n  }\n\n});\n\n```\n\nAvailable props:\n\n- `options` - Hash of Remarkable options\n- `source`  - Markdown source. You can also pass the source as children, which allows you to mix React components and Markdown.\n- `container` - Element to use as container. Defaults to `span`.\n\n## License\nMIT\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/acdlite/react-remarkable/issues"
  },
  "_id": "react-remarkable@1.1.0",
  "_from": "react-remarkable@^1.1.0"
}
